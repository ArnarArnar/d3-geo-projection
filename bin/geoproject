#!/usr/bin/env node

var commander = require("commander"),
    vm = require("vm"),
    d3 = Object.assign({}, require("d3-geo"), require("../")),
    read = require("./read"),
    write = require("./write");

commander
    .version(require("../package.json").version)
    .usage("[options] <projection>")
    .description("Transform GeoJSON, such as to project from spherical to planar coordinates.")
    .option("-i, --in <file>", "input file name; defaults to “-” for stdin", "-")
    .option("-o, --out <file>", "output file name; defaults to “-” for stdout", "-")
    .option("-n, --newline-delimited", "use newline-delimited JSON")
    .parse(process.argv);

if (commander.args.length !== 1) {
  console.error();
  console.error("  error: invalid or missing projection");
  console.error();
  process.exit(1);
}

var sandbox = {d3: d3, d: undefined, i: -1},
    context = new vm.createContext(sandbox),
    projection = new vm.Script("(" + commander.args[0] + ")"),
    reader = read(commander, project).then(end),
    writer = write(commander);

function project(d, i) {
  sandbox.d = d, sandbox.i = i;
  return writer.write(JSON.stringify(d3.geoProject(d, projection.runInContext(context))) + "\n");
}

function end() {
  return writer.end();
}
